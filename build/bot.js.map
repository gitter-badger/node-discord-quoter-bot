{
  "version": 3,
  "file": "bot.js",
  "sourceRoot": "..",
  "sources": [
    "src/bot.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nlg = console.log.bind console\nlgErr = (err) -> console.error \"#{err?.stack or err}\"\n\n# process.on('unhandledRejection', console.error);\n\nDiscord = require 'discord.js'\nmoment = require 'moment-timezone'\n\n{idt, get_env, get_env_check, isTrue, strNumberToSubscript} = require './util'\n\nvars = {}\nObject.assign(vars, get_env_check( ['LOCALE', 'DISCORD_BOT_TOKEN', 'DISCORD_USER_TOKEN'] ))\nObject.assign(vars, get_env( ['PREFIX', 'DATE_FORMAT', 'TIMEZONE', 'SHOW_USER_DISCRIMINATOR', 'EMPTY_MESSAGE'] ))\n\nmoment.locale(vars.LOCALE)\n\n\nDISCRIMINATOR_STRING = \" #\"\n\nCHANNEL_STRING = \"in \"\nif vars.LOCALE in ['pt', 'pt-BR'] then CHANNEL_STRING = \"em \"\n\nSERVER_STRING = \"at \"\nif vars.LOCALE in ['pt', 'pt-BR'] then SERVER_STRING = \"@ \"\n\nIMAGE_EXTENSIONS = ['jpeg', 'jpg', 'png', 'webp', 'gif']\n\n\n\nisImage = (url) ->\n  IMAGE_EXTENSIONS.some ( ext ) ->\n    return url.endsWith('.'+ext)\n\n\nclass App\n  constructor: (@vars) ->\n    @prefix = @vars.PREFIX ? \"$\"\n    @DATE_FORMAT = vars.DATE_FORMAT or \"calendar\"\n    @TIMEZONE = vars.TIMEZONE or \"UTC\"\n    @EMPTY_MESSAGE = vars.EMPTY_MESSAGE or \"\"\n    @SHOW_USER_DISCRIMINATOR = isTrue vars.SHOW_USER_DISCRIMINATOR\n\n    @init_normal_bot()\n    @init_user_bot()\n\n  # inits dedicated bot\n  init_normal_bot: () =>\n    @bot_client = new (Discord.Client)\n    @bot_client.on 'error', (err) ->\n      console.error \"#{ err?.stack or err }\"\n    @bot_client.on 'ready', =>\n      console.log 'Normal bot ready'\n    @bot_client.login @vars.DISCORD_BOT_TOKEN\n\n  # inits user bot\n  init_user_bot: () =>\n    @client = new (Discord.Client)\n\n    @client.on 'ready', =>\n      console.log 'User bot ready'\n\n    @client.on 'message', @handle_message\n    @client.on 'messageUpdate', ((o,n) => @handle_message(n))\n\n    @client.on 'error', (err) ->\n      console.error \"#{ err?.stack or err }\"\n\n    @client.login @vars.DISCORD_USER_TOKEN\n\n  # sends message to user through the dedicated bot\n  send_self_message: (txt) =>\n    @bot_client.fetchUser(@client.user.id).then (user) ->\n      return user.sendMessage(txt)\n    , (reason)->lgErr(reason)\n\n  buildDateString: (timestamp) =>\n    if @DATE_FORMAT == \"calendar\"\n      return moment( timestamp ).calendar()\n    return moment( timestamp ).tz(@TIMEZONE).format(@DATE_FORMAT)\n\n  # builds a string with channel and server(guild) names and timestamp\n  build_message_footer: (message, showGuild=false) =>\n    channel = message.channel\n    footer = []\n    if (name = channel?.name)\n      footer.push CHANNEL_STRING+\"\\##{name}\"\n    if (showGuild and guild = channel?.guild)\n      footer.push \"#{SERVER_STRING}#{guild?.name}\"\n    footer = [ footer.join(\" \") ].filter idt\n    footer.push @buildDateString message.createdTimestamp\n    return footer.join(\" — \")\n\n  # handles all sent or updated messages\n  handle_message: (message, old_message=null) =>\n    # only proceeds if sender is the user himself\n    if message.author.id == @client.user.id\n      args = message.content.split(\" \")\n      cmd = args.shift()\n\n      switch cmd\n        when @prefix+'ping'\n          message.reply 'pong'\n        when @prefix+'q'\n          @do_quote(message, args)\n        when @prefix+'q@'\n          @do_quote(message, args, cite=true)\n\n  # resends or edits a message quoting the message with ID that equals the fisrt argument (in 'args')\n  do_quote: (message, args=[], cite=false, edit=true) =>\n    if not msg_id = args.shift()\n      console.log \"Missing parameter\"\n      # TODO add message for user\n      return\n\n    channel = message.channel\n\n    # search messages with given ID and returns the first one\n    channel.fetchMessages({ limit: 1, around: msg_id }).then (qt_msg) =>\n        qt_msg = qt_msg.first()\n\n        # if there is no message, send a error message to the user\n        if not qt_msg\n          console.warn \"Message ID `#{msg_id}` not found\"\n\n          err_msg = \"Message ID '#{msg_id}' not found. Original message:\\n\"\n          err_msg += \"`#{message.content}`\\n\"\n\n          err_msg += @build_message_footer(message, showGuild=true)\n\n          @send_self_message(err_msg).then( (()->message.delete()), (reason)->lgErr(reason) )\n          return\n\n        # joins the remaining arguments to make the message body\n        res_text = args.join \" \"\n\n        # checks if message is in a server (guild)\n        if channel.guild\n          member = channel.guild.member(qt_msg.author)\n          author_name = member.nickname\n          color = member.highestRole?.color  # adiciona cor de cargo\n\n          # adds a citation to quoted message's user if it's enabled\n          if  cite  and  res_text.search(member.toString()) == -1\n            res_text = \"#{member.toString()}\" + if res_text then \", #{res_text}\" else \"\"\n\n        author_name ?= qt_msg.author.username\n\n        if (@SHOW_USER_DISCRIMINATOR and discriminator = qt_msg.author.discriminator)\n          author_name += DISCRIMINATOR_STRING + strNumberToSubscript(discriminator)\n\n        opts =\n          embed:\n              author:\n                name: author_name\n                icon_url: qt_msg.author.avatarURL\n              description: \"#{qt_msg.content}\"\n              footer:\n                text: @build_message_footer(message)\n              color: color\n              image: {url: null}\n              fields: []\n\n        (qt_msg.attachments.some (attachment, id) ->\n          url = attachment.url\n          if isImage(url)\n            opts.embed.image.url = url\n            return true\n        ) or (\n          qt_msg.embeds.some (embed, id) ->\n            if (url = embed?.thumbnail?.url)\n              opts.embed.image.url = url\n              return true\n        )\n\n        res_text or= @EMPTY_MESSAGE\n\n        if edit\n          message.edit(res_text, opts).then (res_message)->\n            lg \"Message updated: #{res_message.content}\"\n          , (reason)->lgErr(reason)\n        else\n          channel.sendMessage(res_text, opts).then (res_message) ->\n            lg \"Sent message: #{res_message.content}\"\n            message.delete()\n          , (reason)->lgErr(reason)\n\n    , (reason)->lgErr(reason)\n\nif !module.parent\n  bot = new App(vars)\nelse\n  module.exports = {App}\n"
  ]
}